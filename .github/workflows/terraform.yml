name: 'Terraform Manual Apply/Destroy'

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform Action'
        required: true
        default: 'apply'
        type: choice
        options:
          - apply
          - destroy

env:
  TF_VERSION: '1.0.0'

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    name: 'Terraform Manual'
    runs-on: ubuntu-latest
    environment: development

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}"}'
        enable-AzPSSession: false
        environment: azurecloud
        allow-no-subscriptions: false

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Generate SSH Key
      run: |
        mkdir -p ~/.ssh
        ssh-keygen -t rsa -b 4096 -f ~/.ssh/id_rsa -N ""
        echo "SSH_PUBLIC_KEY=$(cat ~/.ssh/id_rsa.pub)" >> $GITHUB_ENV

    - name: Update terraform.tfvars
      run: |
        sed -i "s|ssh_public_key = .*|ssh_public_key = \"$SSH_PUBLIC_KEY\"|" environments/dev/terraform.tfvars

    - name: Terraform Format
      id: fmt
      run: terraform fmt -check
      continue-on-error: true

    - name: Terraform Init
      id: init
      run: terraform init
      working-directory: ./environments/dev

    - name: Terraform Validate
      id: validate
      run: terraform validate
      working-directory: ./environments/dev

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color -var-file="terraform.tfvars"
      working-directory: ./environments/dev

    - name: Terraform Apply or Destroy
      if: github.event.inputs.action == 'apply' || github.event.inputs.action == 'destroy'
      run: |
        if [ "${{ github.event.inputs.action }}" == "apply" ]; then
          terraform apply -auto-approve -var-file="terraform.tfvars"
        elif [ "${{ github.event.inputs.action }}" == "destroy" ]; then
          terraform destroy -auto-approve -var-file="terraform.tfvars"
        fi
      working-directory: ./environments/dev
