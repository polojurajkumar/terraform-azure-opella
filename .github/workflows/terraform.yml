name: Terraform Apply and Destroy

on:
  workflow_dispatch:  # Manual trigger

env:
  TF_VERSION: 1.0.0
  TERRAFORM_DIR: environments/dev
  SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Prepare terraform.tfvars with SSH key
      run: |
        cd $TERRAFORM_DIR
        if [ -f terraform.tfvars ]; then
          echo "Updating ssh_public_key in terraform.tfvars..."
          sed -i "s|^ssh_public_key *=.*|ssh_public_key = \"${SSH_PUBLIC_KEY//\"/\\\"}\"|" terraform.tfvars
        else
          echo "Creating terraform.tfvars..."
          echo "ssh_public_key = \"${SSH_PUBLIC_KEY}\"" > terraform.tfvars
        fi

    - name: Terraform Init
      run: terraform init
      working-directory: ${{ env.TERRAFORM_DIR }}

    - name: Terraform Validate
      run: terraform validate
      working-directory: ${{ env.TERRAFORM_DIR }}

    - name: Terraform Plan (Apply)
      run: terraform plan -var-file="terraform.tfvars"
      working-directory: ${{ env.TERRAFORM_DIR }}

    - name: Terraform Apply
      run: terraform apply -auto-approve -var-file="terraform.tfvars"
      working-directory: ${{ env.TERRAFORM_DIR }}

    - name: Terraform Plan Destroy
      run: terraform plan -destroy -var-file="terraform.tfvars"
      working-directory: ${{ env.TERRAFORM_DIR }}

    - name: Terraform Destroy
      run: terraform destroy -auto-approve -var-file="terraform.tfvars"
      working-directory: ${{ env.TERRAFORM_DIR }}
