name: Terraform Full Workflow (Apply & Destroy on Azure)

on:
  workflow_dispatch:  # Manual trigger

env:
  TF_VERSION: 1.0.0
  TERRAFORM_DIR: environments/dev

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
    - name: 📦 Checkout Code
      uses: actions/checkout@v3

    - name: 🔐 Azure Login
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.ARM_CLIENT_ID }}
        tenant-id: ${{ secrets.ARM_TENANT_ID }}
        subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}

    - name: 🔧 Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: 📄 Inject SSH Key into terraform.tfvars
      run: |
        cd $TERRAFORM_DIR
        if [ -f terraform.tfvars ]; then
          echo "Updating ssh_public_key..."
          sed -i "s|^ssh_public_key *=.*|ssh_public_key = \"${{ secrets.SSH_PUBLIC_KEY }}\"|" terraform.tfvars
        else
          echo "Creating terraform.tfvars with ssh_public_key"
          echo "ssh_public_key = \"${{ secrets.SSH_PUBLIC_KEY }}\"" > terraform.tfvars
        fi

    - name: 🚀 Terraform Init
      run: terraform init
      working-directory: ${{ env.TERRAFORM_DIR }}

    - name: ✅ Terraform Validate
      run: terraform validate
      working-directory: ${{ env.TERRAFORM_DIR }}

    - name: 📐 Terraform Plan (Apply)
      run: terraform plan -out=tfplan -var-file="terraform.tfvars"
      working-directory: ${{ env.TERRAFORM_DIR }}

    - name: 🚀 Terraform Apply
      run: terraform apply -auto-approve tfplan
      working-directory: ${{ env.TERRAFORM_DIR }}

    - name: 💥 Terraform Plan Destroy
      run: terraform plan -destroy -out=destroyplan -var-file="terraform.tfvars"
      working-directory: ${{ env.TERRAFORM_DIR }}

    - name: 🧨 Terraform Destroy
      run: terraform apply -auto-approve destroyplan
      working-directory: ${{ env.TERRAFORM_DIR }}
